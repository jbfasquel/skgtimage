Metadata-Version: 1.1
Name: skgtimage
Version: 0.1
Summary: A set of python routines for graph-based guidance in sequential image analysis
Home-page: Not yet defined
Author: Jean-Baptiste Fasquel
Author-email: Jean-Baptiste.Fasquel [at] univ-angers.fr
License: BSD License
Description: .. -*- mode: rst -*-
        
        
        scikit-gtimage
        ==============
        
        skgtimage or scikit-gtimage (standing for ''graph tools for image analysis'') is a Python module for using graph in order to guide sequential
         image analysis, on top of numpy and networkx and distributed under the 3-Clause BSD license.
        
        
        Important links
        ===============
        
        - Official source code repo: XXX
        - HTML documentation (stable release): XXX
        - HTML documentation (development version): XXX
        
        Dependencies
        ============
        
        scikit-gtimage is tested to work under Python 2.7.
        
        The required dependencies to build the software are NumPy (>=1.8.0), SciPy (>=0.12.0), networkx (>=1.10), and a working C/C++ compiler.
        
        For running the examples Matplotlib >= 1.1.1 is required and for running the
        tests you need nose >= 1.1.2.
        
        
        Install
        =======
        
        This package uses distutils, which is the default way of installing
        python modules. To install for all users on Unix/Linux::
        
          python setup.py build
          sudo python setup.py install
        
        Installing scikit-gtimage without already installed scipy may raise an error. In such a case, install scipy manually (e.g. the last version "pip install scipy")
         and rerun the scikit-gtimage installation.
        
        Development
        ===========
        
        Code
        ----
        
        GIT
        ~~~
        
        You can check the latest sources with the command::
        
            git clone https://github.com/scikit-learn/scikit-learn.git
        
        or if you have write privileges::
        
            git clone git@github.com:scikit-learn/scikit-learn.git
        
        
        Contributing
        ~~~~~~~~~~~~
        
        Quick tutorial on how to go about setting up your environment to
        contribute to scikit-learn: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md
        
        Before opening a Pull Request, have a look at the
        full Contributing page to make sure your code complies
        with our guidelines: http://scikit-learn.org/stable/developers/index.html
        
        
        Testing
        -------
        
        After installation, you can launch the test suite from outside the
        source directory (you will need to have the ``nose`` package installed)::
        
           $ nosetests -v sklearn
        
        Under Windows, it is recommended to use the following command (adjust the path
        to the ``python.exe`` program) as using the ``nosetests.exe`` program can badly
        interact with tests that use ``multiprocessing``::
        
           C:\Python34\python.exe -c "import nose; nose.main()" -v sklearn
        
        See the web page http://scikit-learn.org/stable/install.html#testing
        for more information.
        
            Random number generation can be controlled during testing by setting
            the ``SKLEARN_SEED`` environment variable.
        
Platform: UNKNOWN
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
